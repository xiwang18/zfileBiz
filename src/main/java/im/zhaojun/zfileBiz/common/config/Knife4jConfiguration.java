package im.zhaojun.zfileBiz.common.config;import com.github.xiaoymin.knife4j.spring.extension.OpenApiExtensionResolver;import io.swagger.models.auth.In;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import springfox.documentation.builders.ApiInfoBuilder;import springfox.documentation.builders.PathSelectors;import springfox.documentation.builders.RequestHandlerSelectors;import springfox.documentation.builders.RequestParameterBuilder;import springfox.documentation.service.ApiInfo;import springfox.documentation.service.Contact;import springfox.documentation.service.RequestParameter;import springfox.documentation.spi.DocumentationType;import springfox.documentation.spring.web.plugins.Docket;import springfox.documentation.swagger2.annotations.EnableSwagger2;import java.util.ArrayList;import java.util.List;/** * @author zhaojun */@Configuration@EnableSwagger2public class Knife4jConfiguration {    private final OpenApiExtensionResolver openApiExtensionResolver;    @Autowired    public Knife4jConfiguration(OpenApiExtensionResolver openApiExtensionResolver) {        this.openApiExtensionResolver = openApiExtensionResolver;    }    /**     * onedrive api docket     *     * @return docket     */    @Bean(value = "onedriveApi")    public Docket onedriveApi() {        String groupName = "OneDrive 相关";        return new Docket(DocumentationType.SWAGGER_2)                .apiInfo(apiInfo())                .select()                .apis(RequestHandlerSelectors.basePackage("im.zhaojun.zfile.common.controller.onedrive"))                .paths(PathSelectors.regex("/onedrive/.*|/sharepoint/.*"))                .build()                .groupName(groupName)                .extensions(openApiExtensionResolver.buildExtensions(groupName));    }    /**     * admin api docket     *     * @return docket     */    @Bean(value = "adminApi")    public Docket adminApi() {        String groupName = "管理员功能";        return new Docket(DocumentationType.SWAGGER_2)                .globalRequestParameters(generateRequestParameters())                .apiInfo(apiInfo())                .select()                .apis(RequestHandlerSelectors.basePackage("im.zhaojun.zfile.controller.admin"))                .paths(PathSelectors.ant("/admin/**"))                .build()                .groupName(groupName)                .extensions(openApiExtensionResolver.buildExtensions(groupName));    }    /**     * home api docket     *     * @return docket     */    @Bean(value = "homeApi")    public Docket homeApi() {        String groupName = "用户功能";        return new Docket(DocumentationType.SWAGGER_2)                .apiInfo(apiInfo())                .select()                .apis(RequestHandlerSelectors.basePackage("im.zhaojun.zfile.controller.home"))                .paths(PathSelectors.any())                .build()                .groupName(groupName)                .extensions(openApiExtensionResolver.buildExtensions(groupName));    }    /**     * install api info     *     * @return api info     */    @Bean(value = "installApi")    public Docket installApi() {        String groupName = "初始化功能";        return new Docket(DocumentationType.SWAGGER_2)                .apiInfo(apiInfo())                .select()                .apis(RequestHandlerSelectors.basePackage("im.zhaojun.zfile.home.install"))                .paths(PathSelectors.any())                .build()                .groupName(groupName)                .extensions(openApiExtensionResolver.buildExtensions(groupName));    }    /**     * 获取通用的全局参数     *     * @return  全局参数列表     */    private List<RequestParameter> generateRequestParameters(){        RequestParameterBuilder token = new RequestParameterBuilder();        List<RequestParameter> parameters = new ArrayList<>();        token.name("zfile-token").description("token").in(In.HEADER.toValue()).required(true).build();        parameters.add(token.build());        return parameters;    }    /**     * api 基本信息描述     *     * @return  ApiInfo     */    private ApiInfo apiInfo() {        return new ApiInfoBuilder()                .title("ZFILE 文档")                .description("# 这是 ZFILE Restful 接口文档展示页面")                .termsOfServiceUrl("https://www.zfile.vip")                .contact(new Contact("zhaojun", "https://zfile.vip", "admin@zfile.vip"))                .version("1.0")                .build();    }}